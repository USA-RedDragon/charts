name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          install_only: true

      - name: Detect changed charts
        id: changed
        run: |
          changed_charts=""
          for dir in charts/*; do
            chart_name="$(basename "$dir")"
            version="$(yq '.version' "$dir/Chart.yaml")"
            if ! git rev-parse "$chart_name-${version#v}" &>/dev/null; then
              echo "Packaging chart $chart_name..."
              cr package --package-path=.cr-release-packages "$dir"
              changed_charts+="$chart_name,"
            fi
          done
          echo "charts=${changed_charts%,}" >> $GITHUB_OUTPUT

      - name: Publish charts
        uses: helm/chart-releaser-action@v1.6.0
        if: steps.changed.outputs.charts != ''
        with:
          skip_packaging: true
          pages_branch: helm-index
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  build-docs:
    name: Build Docs
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate READMEs
        run: ./scripts/gen-helm-docs.sh

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
          cache: pip
          cache-dependency-path: docs/requirements.txt

      - name: MkDocs cache
        uses: actions/cache@v3
        with:
          path: docs/.cache
          key: ${{ runner.os }}-mkdocs-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-mkdocs-

      - name: Install dependencies
        run: pip install -r docs/requirements.txt

      - name: Build docs
        working-directory: docs
        env:
          REPO_NAME: ${{ github.repository }}
          REPO_URL: ${{ github.server_url }}/${{ github.repository }}
        run: mkdocs build

      - name: Compress
        run: tar -czvf docs.tar.gz -C docs site

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs.tar.gz
